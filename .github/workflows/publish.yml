name: Publish Extension

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Generate package-lock.json
        run: bunx synp --source-file yarn.lock
      - name: Upload package-lock.json
        uses: actions/upload-artifact@v4
        with:
          name: lock
          path: package-lock.json
      - name: Build
        run: bun run build

  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Upload source
        uses: actions/upload-artifact@v4
        with:
          name: source
          path: |
            *
            !.git/*
            !.github/*
            !yarn.lock
            !bun.lockb

  publish:
    runs-on: ubuntu-latest
    needs: [build, upload]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: raycast/extensions
          token: ${{ secrets.PAT_TOKEN }}
      - name: Clean original extension
        run: |
          if [ -d "extensions/gitmoji-commit" ]; then
            echo "IS_FIRST_COMMIT=false" >> $GITHUB_ENV
          else
            echo "IS_FIRST_COMMIT=true" >> $GITHUB_ENV
          fi
          rm -rf extensions/gitmoji-commit/*
      - name: Download lock
        uses: actions/download-artifact@v4
        with:
          name: lock
          path: extensions/gitmoji-commit
      - name: Download source
        uses: actions/download-artifact@v4
        with:
          name: source
          path: extensions/gitmoji-commit
      - name: Generate PR body
        run: |
          DESCRIPTION=$(sed 's/^# /### /; s/^## /#### /' extensions/gitmoji-commit/README.md)
          SCREENCAST=$(find extensions/gitmoji-commit/metadata -name "*.png" -exec echo '![]({})' \; | tr '\n' '\n')
          cat <<EOF > ../PR-BODY.md
          ## Description
          ${DESCRIPTION}

          This PR is auto-generated by [create-pull-request][1]
          ## Screencast
          ${SCREENCAST}

          ## Checklist

          - [x] I read the [extension guidelines](https://developers.raycast.com/basics/prepare-an-extension-for-store)
          - [x] I read the [documentation about publishing](https://developers.raycast.com/basics/publish-an-extension)
          - [x] I ran \`npm run build\` and [tested this distribution build in Raycast](https://developers.raycast.com/basics/prepare-an-extension-for-store#metadata-and-configuration)
          - [x] I checked that files in the \`assets\` folder are used by the extension itself
          - [x] I checked that assets used by the \`README\` are placed outside of the \`metadata\` folder

          [1]: https://github.com/peter-evans/create-pull-request
          EOF
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT_TOKEN }}
          push-to-fork: zrr1999/raycast-extensions
          commit-message: ${{ env.IS_FIRST_COMMIT == 'true' && 'ðŸš€ Publish Extension' || 'ðŸ“¦ Update Extension' }}
          signoff: true
          committer: zrr1999 <2742392377@qq.com>
          author: zrr1999 <2742392377@qq.com>
          branch: gitmoji-commit
          title: ${{ env.IS_FIRST_COMMIT == 'true' && 'Add gitmoji-commit extension' || 'Update gitmoji-commit extension' }}
          body-path: ../PR-BODY.md
          draft: false
